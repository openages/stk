import{b as k,c as x}from"../storage/index.js";import{get as d,observe as h,set as u}from"mobx";var _=(a)=>{if(typeof a==="string")return{local_key:a,proxy_key:a};else{let s=Object.keys(a)[0],o=a[s];if(typeof o==="function")return{local_key:s,proxy_key:s,getHandler:o};if(typeof o==="object"&&o)return{local_key:s,proxy_key:s,fromStorage:o.fromStorage,toStorage:o.toStorage};return{local_key:s,proxy_key:o}}},b=(a,r,s)=>{let o=s?.useSession?x:k;return a.map((f)=>{let e=_(f),n=o.getItem(e.local_key);if(n!==void 0)if(e.fromStorage)u(r,e.proxy_key,e.fromStorage(n));else if(e.getHandler)u(r,e.proxy_key,e.getHandler(n));else u(r,e.proxy_key,n);else if(e.toStorage)o.setItem(e.local_key,e.toStorage(d(r,e.proxy_key)));else o.setItem(e.local_key,d(r,e.proxy_key))}),h(r,({name:f,newValue:e})=>{a.map((n)=>{let t=_(n);if(f===t.proxy_key)if(t.toStorage)o.setItem(t.local_key,t.toStorage(e));else o.setItem(t.local_key,e)})})};import{deepEqual as S}from"fast-equals";import{get as v}from"lodash-es";import{observe as I,reaction as w,toJS as m}from"mobx";var H=(a)=>{let r=a.watch,s={},o={},f=[];Object.keys(r).map((t)=>{if(t.indexOf("|")!==-1){let l=t.split("|");f.push(...l.map((p)=>({key:p,raw:t})))}if(t.indexOf(".")!==-1)s[t]=r[t];else o[t]=r[t]});let e=Object.keys(s).map((t)=>{return w(()=>v(a,t),(l,p)=>{let c=m(l),i=m(p);if(!S(c,i))s[t](c,i)})}),n=I(a,(t)=>{let{name:l,newValue:p,oldValue:c}=t,i=f.find((y)=>{if(y.key===l)return y});if(i){let y=i.raw.split("|");if(y.includes(l))r[i.raw](y.map((g)=>v(a,g)))}if(r[l]){let y=m(p),g=m(c);if(!S(y,g))r[l](y,g)}});return[...e,n]};export{H as useInstanceWatch,b as setStorageWhenChange};export{H as a};
